---

- name: datasources > Requirements
  apt:
    name: curl

- name: datasources > Retrieve datasources
  uri:
    url:              "{{ elao_grafana_api_url }}/api/datasources"
    force_basic_auth: true
    user:             "{{ elao_grafana_api_user }}"
    password:         "{{ elao_grafana_api_password }}"
    return_content:   true
  register: _elao_grafana_datasources_output

- name: datasources > Update datasources
  command: >
     curl -u {{ elao_grafana_api_user }}:{{ elao_grafana_api_password }} -XPUT {{ elao_grafana_api_url }}/api/datasources/{{ item[0].id }} -d '{{ item[1]|to_json }}' -H 'content-type: application/json'
  register: _elao_grafana_datasources_update_output
  failed_when: "'Datasource updated' not in _elao_grafana_datasources_update_output.stdout"
  # see https://github.com/ansible/ansible-modules-core/pull/1011
  #uri:
  #  url:                  "{{ elao_grafana_api_url }}/api/datasources/{{ item[0].id }}"
  #  method:               PUT
  #  HEADER_Content-Type:  "application/json"
  #  body:                 "{{ item[1]|to_json }}"
  #  force_basic_auth:     true
  #  user:                 "{{ elao_grafana_api_user }}"
  #  password:             "{{ elao_grafana_api_password }}"
  #  status_code:          200
  with_nested:
    - _elao_grafana_datasources_output.json
    - elao_grafana_datasources
  when: item[0].name == item[1].name

- name: datasources > Create datasources
  command: >
     curl -u {{ elao_grafana_api_user }}:{{ elao_grafana_api_password }} -XPOST {{ elao_grafana_api_url }}/api/datasources -d '{{ item|to_json }}' -H 'content-type: application/json'
  register: _elao_grafana_datasources_create_output
  failed_when: "'Datasource added' not in _elao_grafana_datasources_create_output.stdout"
  # see https://github.com/ansible/ansible-modules-core/pull/1011
  #uri:
  #  url:                  "{{ elao_grafana_api_url }}/api/datasources"
  #  method:               POST
  #  HEADER_Content-Type:  "application/json"
  #  body:                 '{{ item|to_json }}'
  #  force_basic_auth:     true
  #  user:                 "{{ elao_grafana_api_user }}"
  #  password:             "{{ elao_grafana_api_password }}"
  #  status_code:          200
  with_items: elao_grafana_datasources
  when: item.name not in _elao_grafana_datasources_output.json|map(attribute='name')|list
